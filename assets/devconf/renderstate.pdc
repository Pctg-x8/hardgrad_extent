# RenderState(RenderPass and PipelineState)

# 記号<->名前: ->=To <-=From @=At

# Rust側からは`pdcrs.render_passes["FirstRP"]`で参照できる
$FirstRP: RenderPass
- Attachments:
-- $Backbuffer: R16G16B16A16 SFLOAT, ColorAttachmentOptimal -> ColorAttachmentOptimal, ClearOnLoad
-- $TonemapResult: R8G8B8A8 UNORM, ColorAttachmentOptimal -> ShaderReadOnlyOptimal, PreserveContent
- Subpasses:
-- $StdRender: RenderTo [$Backbuffer]
-- $Tonemap: RenderTo [$TonemapResult] From [$Backbuffer]
- Dependencies:
-- $StdRender -> $Tonemap: ColorAttachmentWrite -> ShaderRead @ FragmentShaderStage, ByRegion

$SMAAEdgeDetectRP: SimpleRenderPass
- Format: R8G8 UNORM
- ClearMode: OnLoad
$SMAABlendWeightRP: SimpleRenderPass
- Format: R8G8BA8 UNORM
- ClearMode: OnLoad
$SMAACombineRP: PresentRenderPass
- Format: R8G8B8A8 UNORM
#- ClearMode: None

# Rust側からは`pdcrs.descriptor_set_layous["GlobalUBDesc"]`で参照できる
$GlobalUBDesc: DescriptorSetLayout
- UniformBuffer: Vertex / Geometry
$SpriteTexDesc: DescriptorSetLayout
- CombinedSampler: Fragment
$ColorRampTexDesc: DescriptorSetLayout
- CombinedSampler: Geometry
$PrePassRefDesc: DescriptorSetLayout
- InputAttachment: Fragment
$SMAAEdgeDetectInputDesc: DescriptorSetLayout
- CombinedSampler: Fragment
$SMAABlendWeightCalcInputDescs: DescriptorSetLayout
- 3 CombinedSampler: Fragment
$SMAACombineInputDescs: DescriptorSetLayout
- 2 CombinedSampler: Fragment

$WireColorConstants: PushConstantLayout
- Range: 0 .. 16
- Visibility: Vertex

$WireRenderLayout: PipelineLayout
- Descriptors: $GlobalUBDesc
- PushConstantLayouts: $WireColorConstants
$TonemapperLayout: PipelineLayout
- Descriptors: $PrePassRefDesc
$LineParticleLayout: PipelineLayout
- Descriptors: $GlobalUBDesc, $ColorRampTexDesc
$SpriteRenderLayout: PipelineLayout
- Descriptors: $GlobalUBDesc, $SpriteTexDesc

# Rust側からは`pdcrs.descriptor_sets[0]["GlobalUniform"]`で参照できる
DescriptorSets:
- $GlobalUniform: $GlobalUBDesc
- $PlayerBulletTex: $SpriteTexDesc
- $CircleBulletTex: $SpriteTexDesc
- $CircleGradientTex: $ColorRampTexDesc
- $LineParticleGradientTex: $ColorRampTexDesc
- $TonemapInput: $PrePassRefDesc
- $SMAAEdgeDetectInput: $SMAAEdgeDetectInputDesc
- $SMAABlendWeightCalcInput: $SMAABlendWeightcalcInputDescs
- $SMAACombine: $SMAACombineInputDescs

# Rust側からは参照できない(シェーダモジュール定義)
$SmallPlayerBulletVsh: VertexShader !shaders.PlayerBullet
- Constant 0: 0.625

# Rust側からは`pdcrs.pipeline_states["Background"]`で参照できる
# !はアセット参照
$Background: PipelineState for $FirstRP.$StdRender with $WireRenderLayout
- PrimitiveTopology: LineList with Adjacency
- VertexShader: !shaders.GeometryPreinstancing
- ViewportScissors: [ScreenView]
- GeometryShader: !shaders.BackLineDuplicator
- FragmentShader: !shaders.ThroughColor
- BlendStates: [PremultipliedAlpha]
$Enemy: PipelineState for $FirstRP.$StdRender with $WireRenderLayout
- PrimitiveTopology: LineList with Adjacency
- VertexShader: !shaders.GeometryPreinstancing
- ViewportScissors: [ScreenView]
- GeometryShader: !shaders.EnemyDuplicator
- FragmentShader: !shaders.ThroughColor
- BlendStates: [Disabled]
$EnemyRezonator: PipelineState for $FirstRP.$StdRender with $WireRenderLayout
- PrimitiveTopology: TriangleList
- VertexShader: !shaders.EnemyRezonatorV
- ViewportScissors: [ScreenView]
- GeometryShader: !shaders.EnemyRezonatorDup
- FragmentShader: !shaders.ThroughColor
- BlendStates: [Disabled]
$Player: PipelineState for $FirstRP.$StdRender with $WireRenderLayout
- PrimitiveTopology: LineList
- VertexShader: !shaders.PlayerRotor
- ViewportScissors: [ScreenView]
- FragmentShader: !shaders.ThroughColor
- BlendStates: [Disabled]
$PlayerBullet: PipelineState for $FirstRP.$StdRender with $WireRenderLayout
- PrimitiveTopology: TriangleStrip
- VertexShader: !shaders.PlayerBullet
-- Constant 0: 0.75
- ViewportScissors: [ScreenView]
- FragmentShader: !shaders.SpriteFrag
- BlendStates: [PremultipliedAlpha]
$TestPS: PipelineState for $FirstRP.$StdRender with $WireRenderLayout
- PrimitiveTopology: TriangleFan
- VertexShader: $SmallPlayerBulletVsh
- FragmentShader: !shaders.SpriteFrag
# (0, 0) to (640, 480) (depth 0 to 1), (0, 0) to (640, 480) (depth 0 to 1) (ScissorRect (0, 0) to (320, 240))
- ViewportScissors:
-- (0, 0, 0)-(640, 480, 1)
-- (0, 0, 0)-(640, 480, 1):(0, 0)-(320, 240)
- BlendStates: [PremultipliedAlpha]
